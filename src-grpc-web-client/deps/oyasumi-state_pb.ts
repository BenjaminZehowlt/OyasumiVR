// @generated by protobuf-ts 2.9.0 with parameter long_type_string,add_pb_suffix,force_server_none
// @generated from protobuf file "oyasumi-state.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import { WireType } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import { UnknownFieldHandler } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { reflectionMergePartial } from '@protobuf-ts/runtime';
import { MESSAGE_TYPE } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message OyasumiAppState
 */
export interface OyasumiAppState {
  /**
   * @generated from protobuf field: optional bool sleep_mode = 1;
   */
  sleepMode?: boolean;
  /**
   * @generated from protobuf field: optional VRCStatus vrc_status = 2;
   */
  vrcStatus?: VRCStatus;
  /**
   * @generated from protobuf field: optional string vrc_username = 3;
   */
  vrcUsername?: string;
}
/**
 * @generated from protobuf enum VRCStatus
 */
export enum VRCStatus {
  /**
   * @generated from protobuf enum value: VRCStatus_Offline = 0;
   */
  VRCStatus_Offline = 0,
  /**
   * @generated from protobuf enum value: VRCStatus_Busy = 1;
   */
  VRCStatus_Busy = 1,
  /**
   * @generated from protobuf enum value: VRCStatus_AskMe = 2;
   */
  VRCStatus_AskMe = 2,
  /**
   * @generated from protobuf enum value: VRCStatus_Active = 3;
   */
  VRCStatus_Active = 3,
  /**
   * @generated from protobuf enum value: VRCStatus_JoinMe = 4;
   */
  VRCStatus_JoinMe = 4,
}
// @generated message type with reflection information, may provide speed optimized methods
class OyasumiAppState$Type extends MessageType<OyasumiAppState> {
  constructor() {
    super('OyasumiAppState', [
      { no: 1, name: 'sleep_mode', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },
      { no: 2, name: 'vrc_status', kind: 'enum', opt: true, T: () => ['VRCStatus', VRCStatus] },
      { no: 3, name: 'vrc_username', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<OyasumiAppState>): OyasumiAppState {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
    if (value !== undefined) reflectionMergePartial<OyasumiAppState>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: OyasumiAppState
  ): OyasumiAppState {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional bool sleep_mode */ 1:
          message.sleepMode = reader.bool();
          break;
        case /* optional VRCStatus vrc_status */ 2:
          message.vrcStatus = reader.int32();
          break;
        case /* optional string vrc_username */ 3:
          message.vrcUsername = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: OyasumiAppState,
    writer: IBinaryWriter,
    options: BinaryWriteOptions
  ): IBinaryWriter {
    /* optional bool sleep_mode = 1; */
    if (message.sleepMode !== undefined) writer.tag(1, WireType.Varint).bool(message.sleepMode);
    /* optional VRCStatus vrc_status = 2; */
    if (message.vrcStatus !== undefined) writer.tag(2, WireType.Varint).int32(message.vrcStatus);
    /* optional string vrc_username = 3; */
    if (message.vrcUsername !== undefined)
      writer.tag(3, WireType.LengthDelimited).string(message.vrcUsername);
    let u = options.writeUnknownFields;
    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message OyasumiAppState
 */
export const OyasumiAppState = new OyasumiAppState$Type();
